#include <stdio.h>
#define CAP 2   // capacity

int key[CAP], val[CAP], used[CAP];

int get(int k) {
    for(int i=0;i<CAP;i++) if(key[i]==k){ used[i]=1; return val[i]; }
    return -1;
}

void put(int k,int v) {
    for(int i=0;i<CAP;i++) if(key[i]==k){ val[i]=v; used[i]=1; return; }
    int idx=-1;
    for(int i=0;i<CAP;i++) if(!used[i]) { idx=i; break; }
    if(idx==-1) idx=0; // evict first
    key[idx]=k; val[idx]=v; used[idx]=1;
}

int main() {
    put(1,1); put(2,2);
    printf("%d\n", get(1)); // 1
    put(3,3);
    printf("%d\n", get(2)); // -1
}
